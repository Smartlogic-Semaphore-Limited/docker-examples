# Authentication mechanisms: FORM, LDAP, OIDC, NO_AUTH
studio.auth.mechanism=FORM

## User & Roles

### If the properties are stored in plain text. If this is true (the default) then it is expected that the passwords are of the form HEX( MD5( username ":" realm ":" password ) )
#quarkus.security.users.embedded.plain-text=true
#quarkus.security.users.embedded.algorithm=digest-md5
### The user to password mappings are specified by properties keys of the form quarkus.security.users.embedded.users.<user>=<password>.
quarkus.security.users.embedded.users.SEMAPHORE_ADMIN_USERNAME=SEMAPHORE_ADMIN_PASSWORD

### The user to role mappings are specified by properties keys of the form quarkus.security.users.embedded.roles.<user>=role1[,role2[,role3[,\u2026\u200B]]].
quarkus.security.users.embedded.roles.SEMAPHORE_ADMIN_USERNAME=SemaphoreSuperAdministrators,SemaphoreAdministrators,SemaphoreRoots

# LDAP Authentication
#quarkus.security.ldap.dir-context.principal=cn=admin,dc=quarkus,dc=io
#quarkus.security.ldap.dir-context.url=ldap://localhost:389
#quarkus.security.ldap.dir-context.password=secret
#quarkus.security.ldap.identity-mapping.rdn-identifier=uid
#quarkus.security.ldap.identity-mapping.search-base-dn=ou=Users,dc=quarkus,dc=io
#quarkus.security.ldap.identity-mapping.attribute-mappings."0".from=cn
#quarkus.security.ldap.identity-mapping.attribute-mappings."0".filter=(member=uid={0},ou=Users,dc=quarkus,dc=io)
#quarkus.security.ldap.identity-mapping.attribute-mappings."0".filter-base-dn=ou=Roles,dc=quarkus,dc=io

